  @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        // roles z claimu "roles" -> GrantedAuthority "ROLE_*"
        org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter rolesConv =
                new org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter();
        rolesConv.setAuthoritiesClaimName("roles");
        rolesConv.setAuthorityPrefix("ROLE_");

        org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter jwtAuth =
                new org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter();
        jwtAuth.setJwtGrantedAuthoritiesConverter(rolesConv);

        return http
            .csrf(csrf -> csrf.disable())
            .sessionManagement(sm -> sm.sessionCreationPolicy(org.springframework.security.config.http.SessionCreationPolicy.STATELESS))
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/actuator/**", "/v3/api-docs/**", "/swagger-ui/**").permitAll()
                .anyRequest().authenticated()
            )
            .oauth2ResourceServer(oauth -> oauth
                .jwt(jwt -> jwt.jwtAuthenticationConverter(jwtAuth))
            )
            .build();
    }