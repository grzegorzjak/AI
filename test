    .filter((request, next) ->
                org.springframework.security.core.context.ReactiveSecurityContextHolder.getContext()
                    .map(org.springframework.security.core.context.SecurityContext::getAuthentication)
                    .defaultIfEmpty(null)
                    .flatMap(auth -> {
                        org.springframework.web.reactive.function.client.ClientRequest.Builder b =
                                org.springframework.web.reactive.function.client.ClientRequest.from(request);
                        if (auth instanceof org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken) {
                            org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken jat =
                                    (org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken) auth;
                            b.headers(h -> h.setBearerAuth(jat.getToken().getTokenValue()));
                        }
                        return next.exchange(b.build());
                    })
            )
            .build();